/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ThingiverseUploadDialog.java
 *
 * Created on 24.01.2015, 18:04:13
 */
package com.tur0kk.thingiverse.gui;

import com.t_oster.visicut.gui.MainView;
import com.tur0kk.LoadingIcon;
import com.tur0kk.TakePhotoThread;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import javax.swing.JDialog;

/**
 *
 * @author Sven
 */
public class ThingiverseUploadDialog extends javax.swing.JDialog
{
  private Thread livecamThread;

  /** Creates new form ThingiverseUploadDialog */
  public ThingiverseUploadDialog(java.awt.Frame parent, boolean modal)
  {
    super(parent, modal);
    initComponents();
    
    // no need to keep state
    this.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
    
    // close camera on exit
    initWindowListener();
    
    // change cam 
    ItemListener selectChangeListener = new ItemListener() {

      public void itemStateChanged(ItemEvent e)
      {
        boolean selected = (e.getStateChange( ) == ItemEvent.SELECTED);
        if(selected == true){ // only if selected
          closeCamera();
          setupCamera();
        }
      
      }
    };
    rdbtnWebcam.addItemListener(selectChangeListener);
    rdbtnVisicam.addItemListener(selectChangeListener);
    
    // enable picture taking
    setupCamera();
  }


  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpCams = new javax.swing.ButtonGroup();
        rdbtnWebcam = new javax.swing.JRadioButton();
        rdbtnVisicam = new javax.swing.JRadioButton();
        pnlPhoto = new javax.swing.JPanel();
        btnPhoto = new javax.swing.JButton();
        btnPhotoRedo = new javax.swing.JButton();
        lblAttachMessage = new javax.swing.JLabel();
        lblPhoto = new javax.swing.JLabel();
        pnlPublish = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaPublish = new javax.swing.JTextArea();
        btnPublish = new javax.swing.JButton();
        lblLoading = new javax.swing.JLabel();
        lblDescription = new javax.swing.JLabel();
        lblPublishSuccessStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N
        setResizable(false);

        grpCams.add(rdbtnWebcam);
        rdbtnWebcam.setSelected(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.t_oster.visicut.gui.VisicutApp.class).getContext().getResourceMap(ThingiverseUploadDialog.class);
        rdbtnWebcam.setText(resourceMap.getString("rdbtnWebcam.text")); // NOI18N
        rdbtnWebcam.setName("rdbtnWebcam"); // NOI18N

        grpCams.add(rdbtnVisicam);
        rdbtnVisicam.setText(resourceMap.getString("rdbtnVisicam.text")); // NOI18N
        rdbtnVisicam.setName("rdbtnVisicam"); // NOI18N

        pnlPhoto.setBorder(javax.swing.BorderFactory.createLineBorder(resourceMap.getColor("pnlPhoto.border.lineColor"))); // NOI18N
        pnlPhoto.setName("pnlPhoto"); // NOI18N

        btnPhoto.setText(resourceMap.getString("btnPhoto.text")); // NOI18N
        btnPhoto.setName("btnPhoto"); // NOI18N
        btnPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPhotoActionPerformed(evt);
            }
        });

        btnPhotoRedo.setText(resourceMap.getString("btnPhotoRedo.text")); // NOI18N
        btnPhotoRedo.setName("btnPhotoRedo"); // NOI18N
        btnPhotoRedo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPhotoRedoActionPerformed(evt);
            }
        });

        lblAttachMessage.setText(resourceMap.getString("lblAttachMessage.text")); // NOI18N
        lblAttachMessage.setName("lblAttachMessage"); // NOI18N

        lblPhoto.setText(resourceMap.getString("lblPhoto.text")); // NOI18N
        lblPhoto.setBorder(javax.swing.BorderFactory.createLineBorder(resourceMap.getColor("lblPhoto.border.lineColor"))); // NOI18N
        lblPhoto.setName("lblPhoto"); // NOI18N

        javax.swing.GroupLayout pnlPhotoLayout = new javax.swing.GroupLayout(pnlPhoto);
        pnlPhoto.setLayout(pnlPhotoLayout);
        pnlPhotoLayout.setHorizontalGroup(
            pnlPhotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 336, Short.MAX_VALUE)
            .addGroup(pnlPhotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlPhotoLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(pnlPhotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlPhotoLayout.createSequentialGroup()
                            .addComponent(btnPhoto)
                            .addGap(18, 18, 18)
                            .addComponent(btnPhotoRedo)
                            .addGap(18, 18, 18)
                            .addComponent(lblAttachMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(lblPhoto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnlPhotoLayout.setVerticalGroup(
            pnlPhotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 270, Short.MAX_VALUE)
            .addGroup(pnlPhotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlPhotoLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(pnlPhotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnPhoto)
                        .addComponent(btnPhotoRedo)
                        .addComponent(lblAttachMessage))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pnlPublish.setBorder(javax.swing.BorderFactory.createLineBorder(resourceMap.getColor("pnlPublish.border.lineColor"))); // NOI18N
        pnlPublish.setName("pnlPublish"); // NOI18N

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(resourceMap.getColor("jScrollPane1.border.lineColor"))); // NOI18N
        jScrollPane1.setName("jScrollPane1"); // NOI18N

        txtaPublish.setColumns(20);
        txtaPublish.setRows(5);
        txtaPublish.setName("txtaPublish"); // NOI18N
        jScrollPane1.setViewportView(txtaPublish);

        btnPublish.setText(resourceMap.getString("btnPublish.text")); // NOI18N
        btnPublish.setName("btnPublish"); // NOI18N
        btnPublish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPublishActionPerformed(evt);
            }
        });

        lblLoading.setIcon(LoadingIcon.get(LoadingIcon.CIRCLEBALL_SMALL));
        lblLoading.setText(resourceMap.getString("lblLoading.text")); // NOI18N
        lblLoading.setName("lblLoading"); // NOI18N

        lblDescription.setText(resourceMap.getString("lblDescription.text")); // NOI18N
        lblDescription.setName("lblDescription"); // NOI18N

        lblPublishSuccessStatus.setText(resourceMap.getString("lblPublishSuccessStatus.text")); // NOI18N
        lblPublishSuccessStatus.setName("lblPublishSuccessStatus"); // NOI18N

        javax.swing.GroupLayout pnlPublishLayout = new javax.swing.GroupLayout(pnlPublish);
        pnlPublish.setLayout(pnlPublishLayout);
        pnlPublishLayout.setHorizontalGroup(
            pnlPublishLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPublishLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(pnlPublishLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlPublishLayout.createSequentialGroup()
                        .addComponent(lblDescription)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblPublishSuccessStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblLoading, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPublish))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        pnlPublishLayout.setVerticalGroup(
            pnlPublishLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPublishLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlPublishLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPublish)
                    .addComponent(lblLoading, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPublishSuccessStatus)
                    .addComponent(lblDescription))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 316, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdbtnVisicam)
                            .addComponent(rdbtnWebcam))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlPublish, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdbtnWebcam)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdbtnVisicam)
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlPublish, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void btnPublishActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnPublishActionPerformed
  {//GEN-HEADEREND:event_btnPublishActionPerformed
   /*
    // disable controls for publishing
    lblLoading.setVisible(true);
    btnPhotoRedo.setEnabled(false);
    btnPublish.setEnabled(false);
    txtaPublish.setEditable(false);
    txtaPublish.setBackground(Color.lightGray);
    
    // things to publish
    ImageIcon icon = (ImageIcon)lblPhoto.getIcon();
    final Image image = icon.getImage();    
    final String message = txtaPublish.getText();
    
    
    new Thread(new Runnable() {

      public void run()
      {
        FacebookManager facebook = FacebookManager.getInstance();
        boolean success = facebook.publishProject(message, image);
        String msg = "";
        if(success){
          msg = "Successful upload";
        }else{
          msg = "Error uploading photo";
        }
        
        final String message = msg;
        SwingUtilities.invokeLater(new Runnable() {
          public void run()
          {
            lblPublishSuccessStatus.setText(message);
            lblPublishSuccessStatus.setVisible(true);
            btnPhotoRedo.setEnabled(true);
            lblLoading.setVisible(false);
          }
        });
        
      }
    }).start();*/
  }//GEN-LAST:event_btnPublishActionPerformed

  private void btnPhotoRedoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnPhotoRedoActionPerformed
  {//GEN-HEADEREND:event_btnPhotoRedoActionPerformed
    setupCamera();
  }//GEN-LAST:event_btnPhotoRedoActionPerformed

  private void btnPhotoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnPhotoActionPerformed
  {//GEN-HEADEREND:event_btnPhotoActionPerformed
    closeCamera();

    // enable publishing
    btnPhoto.setEnabled(false);
    btnPhotoRedo.setEnabled(true);
    btnPublish.setEnabled(true);
    txtaPublish.setEditable(true);
    txtaPublish.setBackground(Color.white);


  }//GEN-LAST:event_btnPhotoActionPerformed
  
  private void initWindowListener(){
    this.addWindowListener(new WindowListener() {

        public void windowOpened(WindowEvent e)
        {

        }

        public void windowClosing(WindowEvent e)
        {
           closeCamera();
        }

        public void windowClosed(WindowEvent e)
        {

        }

        public void windowIconified(WindowEvent e)
        {

        }

        public void windowDeiconified(WindowEvent e)
        {

        }

        public void windowActivated(WindowEvent e)
        {

        }

        public void windowDeactivated(WindowEvent e)
        {

        }
      });
  }
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPhoto;
    private javax.swing.JButton btnPhotoRedo;
    private javax.swing.JButton btnPublish;
    private javax.swing.ButtonGroup grpCams;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAttachMessage;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblLoading;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JLabel lblPublishSuccessStatus;
    private javax.swing.JPanel pnlPhoto;
    private javax.swing.JPanel pnlPublish;
    private javax.swing.JRadioButton rdbtnVisicam;
    private javax.swing.JRadioButton rdbtnWebcam;
    private javax.swing.JTextArea txtaPublish;
    // End of variables declaration//GEN-END:variables
    
  /*
   * Camera functions
   */

  private void setupCamera(){
    // disable publish functions
    lblPhoto.setIcon(null);
    lblLoading.setVisible(false);
    lblPublishSuccessStatus.setVisible(false);
    btnPhotoRedo.setEnabled(false);
    btnPublish.setEnabled(false);
    txtaPublish.setText("");
    txtaPublish.setEditable(false);
    txtaPublish.setBackground(Color.lightGray);

    // check selected cam mode and if corresponding hardware is available
    boolean start = false;
    if(rdbtnWebcam.isSelected()){
      if(TakePhotoThread.isWebCamDetected()){
        start = true;
      }
    }
    else{// visicam
      if(TakePhotoThread.isVisiCamDetected()){
        start = true;
      }
    }

    if(start){
      lblAttachMessage.setVisible(false); // webcam error message

      // start picture taking thread to display live preview
      boolean webcamMode = rdbtnWebcam.isSelected(); // if false, then visicam
      livecamThread = new TakePhotoThread(lblPhoto, webcamMode);
      livecamThread.start();

      btnPhoto.setEnabled(true);
    }
    else{
      // disable taking photos
      btnPhoto.setEnabled(false);
      lblAttachMessage.setVisible(true); // webcam error message
    }
  }

  private void closeCamera(){
    if(livecamThread != null){
      livecamThread.interrupt(); // stop live stream thread
      livecamThread = null;
    }
  }

  
}
